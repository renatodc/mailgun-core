{"version":3,"sources":["store/index.js","components/Mailbox.js","store/WeatherForecasts.js","store/Counter.ts","store/Mailbox.js","registerServiceWorker.ts","index.tsx","store/configureStore.ts","App.tsx"],"names":["Object","defineProperty","exports","value","WeatherForecasts","require","Counter","Mailbox","reducers","mailbox","reducer","counter","weatherForecasts","__extends","this","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","React","react_redux_1","dx_react_grid_1","dx_react_grid_material_ui_1","_super","_this","apply","arguments","state","columns","name","title","defaultColumnWidths","columnName","width","selection","sorting","direction","changeSorting","setState","changeSelection","render","createElement","Fragment","Grid","rows","props","SortingState","defaultSorting","IntegratedSorting","Table","TableHeaderRow","showSortingControls","Component","default","connect","actionCreators","requestWeatherForecasts","startDateIndex","dispatch","getState","appState","fetch","then","response","json","data","type","forecasts","unloadedState","isLoading","incomingAction","undefined","action","increment","decrement","count","initialState","id","sender","recipient","mailSubject","bodyHtml","mailDate","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","store","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","getElementById","URL","process","toString","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7d197836.chunk.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar WeatherForecasts = require(\"./WeatherForecasts\");\r\nvar Counter = require(\"./Counter\");\r\nvar Mailbox = require(\"./Mailbox\");\r\nexports.reducers = {\r\n    mailbox: Mailbox.reducer,\r\n    counter: Counter.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer\r\n};\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar dx_react_grid_1 = require(\"@devexpress/dx-react-grid\");\r\nvar dx_react_grid_material_ui_1 = require(\"@devexpress/dx-react-grid-material-ui\");\r\nvar Mailbox = /** @class */ (function (_super) {\r\n    __extends(Mailbox, _super);\r\n    function Mailbox() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            columns: [\r\n                { name: 'sender', title: 'From' },\r\n                { name: 'mailDate', title: 'Date' },\r\n            ],\r\n            defaultColumnWidths: [\r\n                { columnName: 'sender', width: 240 },\r\n                { columnName: 'mailDate', width: 110 }\r\n            ],\r\n            selection: [],\r\n            sorting: [{ columnName: 'mailDate', direction: 'desc' }]\r\n        };\r\n        _this.changeSorting = function (sorting) {\r\n            _this.setState({ sorting: sorting });\r\n        };\r\n        _this.changeSelection = function (selection) {\r\n            _this.setState({ selection: selection });\r\n            //this.props.mailSelect(selection);\r\n        };\r\n        return _this;\r\n    }\r\n    Mailbox.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(dx_react_grid_material_ui_1.Grid, { rows: this.props.mailbox, columns: this.state.columns },\r\n                React.createElement(dx_react_grid_1.SortingState, { defaultSorting: [{ columnName: 'mailDate', direction: 'desc' }] }),\r\n                React.createElement(dx_react_grid_1.IntegratedSorting, null),\r\n                React.createElement(dx_react_grid_material_ui_1.Table, null),\r\n                React.createElement(dx_react_grid_material_ui_1.TableHeaderRow, { showSortingControls: true }))));\r\n    };\r\n    return Mailbox;\r\n}(React.Component));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.mailbox; })(Mailbox);\r\n//# sourceMappingURL=Mailbox.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\nexports.actionCreators = {\r\n    requestWeatherForecasts: function (startDateIndex) { return function (dispatch, getState) {\r\n        // Only load data if it's something we don't already have (and are not already loading)\r\n        var appState = getState();\r\n        if (appState && appState.weatherForecasts && startDateIndex !== appState.weatherForecasts.startDateIndex) {\r\n            fetch(\"weatherforecast\")\r\n                .then(function (response) { return response.json(); })\r\n                .then(function (data) {\r\n                dispatch({ type: 'RECEIVE_WEATHER_FORECASTS', startDateIndex: startDateIndex, forecasts: data });\r\n            });\r\n            dispatch({ type: 'REQUEST_WEATHER_FORECASTS', startDateIndex: startDateIndex });\r\n        }\r\n    }; }\r\n};\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\nvar unloadedState = { forecasts: [], isLoading: false };\r\nexports.reducer = function (state, incomingAction) {\r\n    if (state === undefined) {\r\n        return unloadedState;\r\n    }\r\n    var action = incomingAction;\r\n    switch (action.type) {\r\n        case 'REQUEST_WEATHER_FORECASTS':\r\n            return {\r\n                startDateIndex: action.startDateIndex,\r\n                forecasts: state.forecasts,\r\n                isLoading: true\r\n            };\r\n        case 'RECEIVE_WEATHER_FORECASTS':\r\n            // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n            // handle out-of-order responses.\r\n            if (action.startDateIndex === state.startDateIndex) {\r\n                return {\r\n                    startDateIndex: action.startDateIndex,\r\n                    forecasts: action.forecasts,\r\n                    isLoading: false\r\n                };\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n//# sourceMappingURL=WeatherForecasts.js.map","import { Action, Reducer } from 'redux';\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface CounterState {\r\n    count: number;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n// Use @typeName and isActionType for type detection that works even after serialization/deserialization.\r\n\r\nexport interface IncrementCountAction { type: 'INCREMENT_COUNT' }\r\nexport interface DecrementCountAction { type: 'DECREMENT_COUNT' }\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\nexport type KnownAction = IncrementCountAction | DecrementCountAction;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    increment: () => ({ type: 'INCREMENT_COUNT' } as IncrementCountAction),\r\n    decrement: () => ({ type: 'DECREMENT_COUNT' } as DecrementCountAction)\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nexport const reducer: Reducer<CounterState> = (state: CounterState | undefined, incomingAction: Action): CounterState => {\r\n    if (state === undefined) {\r\n        return { count: 0 };\r\n    }\r\n\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'INCREMENT_COUNT':\r\n            return { count: state.count + 1 };\r\n        case 'DECREMENT_COUNT':\r\n            return { count: state.count - 1 };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar initialState = {\r\n    mailbox: [\r\n        { id: 1, sender: \"steve@cratemail.org\", recipient: \"jane@cratemail.org\", mailSubject: \"First meeting for Cratemail group\", bodyHtml: \"thanks for the update\", mailDate: \"06/06/18 10:15am\" },\r\n        { id: 2, sender: \"bill@cratemail.org\", recipient: \"carl@cratemail.org\", mailSubject: \"First meeting for Cratemail group\", bodyHtml: \"will forward the info\", mailDate: \"06/06/18 11:15pm\" },\r\n        { id: 3, sender: \"jane@cratemail.org\", recipient: \"admin@cratemail.org\", mailSubject: \"Second Meeting for Cratemail group\", bodyHtml: \"need more details\", mailDate: \"06/07/18 6:55pm\" },\r\n        { id: 4, sender: \"steve@cratemail.org\", recipient: \"admin@cratemail.org\", mailSubject: \"RE: First for Cratemail group\", bodyHtml: \"please review when you get a chance\", mailDate: \"06/07/18 8:30pm\" },\r\n        { id: 5, sender: \"admin@cratemail.org\", recipient: \"steve@cratemail.org\", mailSubject: \"RE: First Meeting for Cratemail group\", bodyHtml: \"appreciate the suggestion\", mailDate: \"06/09/18 5:15am\" }\r\n    ]\r\n};\r\nexports.reducer = function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    return state;\r\n};\r\n//# sourceMappingURL=Mailbox.js.map","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { History } from 'history';\r\nimport { ApplicationState, reducers } from './';\r\n\r\nexport default function configureStore(history: History, initialState?: ApplicationState) {\r\n    const middleware = [\r\n        thunk,\r\n        routerMiddleware(history)\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n\r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport Counter from './components/Counter';\r\nimport FetchData from './components/FetchData';\r\n\r\nimport './custom.css'\r\nimport Mailbox from './components/Mailbox';\r\n\r\nexport default () => (\r\n    //<Layout>\r\n    //    <Route exact path='/' component={Home} />\r\n    //    <Route path='/counter' component={Counter} />\r\n    //    <Route path='/fetch-data/:startDateIndex?' component={FetchData} />\r\n    //</Layout>\r\n    <Mailbox />\r\n);\r\n"],"sourceRoot":""}